State 0:
prog' -> . prog [ # ]
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On INT shift to state 9
-- On IF shift to state 10
-- On IDENT shift to state 4
-- On CMD shift to state 11
-- On BOOL shift to state 12
-- On stmts shift to state 26
-- On prog shift to state 28
-- On ident shift to state 17
-- On expr shift to state 19

State 1:
expr -> WHILE . expr IN stmts END [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On INT shift to state 9
-- On IF shift to state 10
-- On IDENT shift to state 4
-- On CMD shift to state 11
-- On BOOL shift to state 12
-- On ident shift to state 17
-- On expr shift to state 22

State 2:
expr -> STR . [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
-- On WHILE reduce production expr -> STR 
-- On STR reduce production expr -> STR 
-- On PROC reduce production expr -> STR 
-- On PRINT reduce production expr -> STR 
-- On OPS reduce production expr -> STR 
-- On INT reduce production expr -> STR 
-- On IN reduce production expr -> STR 
-- On IF reduce production expr -> STR 
-- On IDENT reduce production expr -> STR 
-- On EOF reduce production expr -> STR 
-- On END reduce production expr -> STR 
-- On ELSE reduce production expr -> STR 
-- On CMD reduce production expr -> STR 
-- On BOOL reduce production expr -> STR 

State 3:
expr -> PROC . ident IN stmts END [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
-- On IDENT shift to state 4
-- On ident shift to state 5

State 4:
ident -> IDENT . [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
-- On WHILE reduce production ident -> IDENT 
-- On STR reduce production ident -> IDENT 
-- On PROC reduce production ident -> IDENT 
-- On PRINT reduce production ident -> IDENT 
-- On OPS reduce production ident -> IDENT 
-- On INT reduce production ident -> IDENT 
-- On IN reduce production ident -> IDENT 
-- On IF reduce production ident -> IDENT 
-- On IDENT reduce production ident -> IDENT 
-- On EOF reduce production ident -> IDENT 
-- On END reduce production ident -> IDENT 
-- On ELSE reduce production ident -> IDENT 
-- On CMD reduce production ident -> IDENT 
-- On BOOL reduce production ident -> IDENT 

State 5:
expr -> PROC ident . IN stmts END [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
-- On IN shift to state 6

State 6:
expr -> PROC ident IN . stmts END [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On INT shift to state 9
-- On IF shift to state 10
-- On IDENT shift to state 4
-- On CMD shift to state 11
-- On BOOL shift to state 12
-- On stmts shift to state 20
-- On ident shift to state 17
-- On expr shift to state 19

State 7:
expr -> PRINT . [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
-- On WHILE reduce production expr -> PRINT 
-- On STR reduce production expr -> PRINT 
-- On PROC reduce production expr -> PRINT 
-- On PRINT reduce production expr -> PRINT 
-- On OPS reduce production expr -> PRINT 
-- On INT reduce production expr -> PRINT 
-- On IN reduce production expr -> PRINT 
-- On IF reduce production expr -> PRINT 
-- On IDENT reduce production expr -> PRINT 
-- On EOF reduce production expr -> PRINT 
-- On END reduce production expr -> PRINT 
-- On ELSE reduce production expr -> PRINT 
-- On CMD reduce production expr -> PRINT 
-- On BOOL reduce production expr -> PRINT 

State 8:
expr -> OPS . [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
-- On WHILE reduce production expr -> OPS 
-- On STR reduce production expr -> OPS 
-- On PROC reduce production expr -> OPS 
-- On PRINT reduce production expr -> OPS 
-- On OPS reduce production expr -> OPS 
-- On INT reduce production expr -> OPS 
-- On IN reduce production expr -> OPS 
-- On IF reduce production expr -> OPS 
-- On IDENT reduce production expr -> OPS 
-- On EOF reduce production expr -> OPS 
-- On END reduce production expr -> OPS 
-- On ELSE reduce production expr -> OPS 
-- On CMD reduce production expr -> OPS 
-- On BOOL reduce production expr -> OPS 

State 9:
expr -> INT . [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
-- On WHILE reduce production expr -> INT 
-- On STR reduce production expr -> INT 
-- On PROC reduce production expr -> INT 
-- On PRINT reduce production expr -> INT 
-- On OPS reduce production expr -> INT 
-- On INT reduce production expr -> INT 
-- On IN reduce production expr -> INT 
-- On IF reduce production expr -> INT 
-- On IDENT reduce production expr -> INT 
-- On EOF reduce production expr -> INT 
-- On END reduce production expr -> INT 
-- On ELSE reduce production expr -> INT 
-- On CMD reduce production expr -> INT 
-- On BOOL reduce production expr -> INT 

State 10:
expr -> IF . stmts ELSE stmts END [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On INT shift to state 9
-- On IF shift to state 10
-- On IDENT shift to state 4
-- On CMD shift to state 11
-- On BOOL shift to state 12
-- On stmts shift to state 13
-- On ident shift to state 17
-- On expr shift to state 19

State 11:
expr -> CMD . [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
-- On WHILE reduce production expr -> CMD 
-- On STR reduce production expr -> CMD 
-- On PROC reduce production expr -> CMD 
-- On PRINT reduce production expr -> CMD 
-- On OPS reduce production expr -> CMD 
-- On INT reduce production expr -> CMD 
-- On IN reduce production expr -> CMD 
-- On IF reduce production expr -> CMD 
-- On IDENT reduce production expr -> CMD 
-- On EOF reduce production expr -> CMD 
-- On END reduce production expr -> CMD 
-- On ELSE reduce production expr -> CMD 
-- On CMD reduce production expr -> CMD 
-- On BOOL reduce production expr -> CMD 

State 12:
expr -> BOOL . [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
-- On WHILE reduce production expr -> BOOL 
-- On STR reduce production expr -> BOOL 
-- On PROC reduce production expr -> BOOL 
-- On PRINT reduce production expr -> BOOL 
-- On OPS reduce production expr -> BOOL 
-- On INT reduce production expr -> BOOL 
-- On IN reduce production expr -> BOOL 
-- On IF reduce production expr -> BOOL 
-- On IDENT reduce production expr -> BOOL 
-- On EOF reduce production expr -> BOOL 
-- On END reduce production expr -> BOOL 
-- On ELSE reduce production expr -> BOOL 
-- On CMD reduce production expr -> BOOL 
-- On BOOL reduce production expr -> BOOL 

State 13:
expr -> IF stmts . ELSE stmts END [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
stmts -> stmts . expr [ WHILE STR PROC PRINT OPS INT IF IDENT ELSE CMD BOOL ]
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On INT shift to state 9
-- On IF shift to state 10
-- On IDENT shift to state 4
-- On ELSE shift to state 14
-- On CMD shift to state 11
-- On BOOL shift to state 12
-- On ident shift to state 17
-- On expr shift to state 18

State 14:
expr -> IF stmts ELSE . stmts END [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On INT shift to state 9
-- On IF shift to state 10
-- On IDENT shift to state 4
-- On CMD shift to state 11
-- On BOOL shift to state 12
-- On stmts shift to state 15
-- On ident shift to state 17
-- On expr shift to state 19

State 15:
expr -> IF stmts ELSE stmts . END [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
stmts -> stmts . expr [ WHILE STR PROC PRINT OPS INT IF IDENT END CMD BOOL ]
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On INT shift to state 9
-- On IF shift to state 10
-- On IDENT shift to state 4
-- On END shift to state 16
-- On CMD shift to state 11
-- On BOOL shift to state 12
-- On ident shift to state 17
-- On expr shift to state 18

State 16:
expr -> IF stmts ELSE stmts END . [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
-- On WHILE reduce production expr -> IF stmts ELSE stmts END 
-- On STR reduce production expr -> IF stmts ELSE stmts END 
-- On PROC reduce production expr -> IF stmts ELSE stmts END 
-- On PRINT reduce production expr -> IF stmts ELSE stmts END 
-- On OPS reduce production expr -> IF stmts ELSE stmts END 
-- On INT reduce production expr -> IF stmts ELSE stmts END 
-- On IN reduce production expr -> IF stmts ELSE stmts END 
-- On IF reduce production expr -> IF stmts ELSE stmts END 
-- On IDENT reduce production expr -> IF stmts ELSE stmts END 
-- On EOF reduce production expr -> IF stmts ELSE stmts END 
-- On END reduce production expr -> IF stmts ELSE stmts END 
-- On ELSE reduce production expr -> IF stmts ELSE stmts END 
-- On CMD reduce production expr -> IF stmts ELSE stmts END 
-- On BOOL reduce production expr -> IF stmts ELSE stmts END 

State 17:
expr -> ident . [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
-- On WHILE reduce production expr -> ident 
-- On STR reduce production expr -> ident 
-- On PROC reduce production expr -> ident 
-- On PRINT reduce production expr -> ident 
-- On OPS reduce production expr -> ident 
-- On INT reduce production expr -> ident 
-- On IN reduce production expr -> ident 
-- On IF reduce production expr -> ident 
-- On IDENT reduce production expr -> ident 
-- On EOF reduce production expr -> ident 
-- On END reduce production expr -> ident 
-- On ELSE reduce production expr -> ident 
-- On CMD reduce production expr -> ident 
-- On BOOL reduce production expr -> ident 

State 18:
stmts -> stmts expr . [ WHILE STR PROC PRINT OPS INT IF IDENT EOF END ELSE CMD BOOL ]
-- On WHILE reduce production stmts -> stmts expr 
-- On STR reduce production stmts -> stmts expr 
-- On PROC reduce production stmts -> stmts expr 
-- On PRINT reduce production stmts -> stmts expr 
-- On OPS reduce production stmts -> stmts expr 
-- On INT reduce production stmts -> stmts expr 
-- On IF reduce production stmts -> stmts expr 
-- On IDENT reduce production stmts -> stmts expr 
-- On EOF reduce production stmts -> stmts expr 
-- On END reduce production stmts -> stmts expr 
-- On ELSE reduce production stmts -> stmts expr 
-- On CMD reduce production stmts -> stmts expr 
-- On BOOL reduce production stmts -> stmts expr 

State 19:
stmts -> expr . [ WHILE STR PROC PRINT OPS INT IF IDENT EOF END ELSE CMD BOOL ]
-- On WHILE reduce production stmts -> expr 
-- On STR reduce production stmts -> expr 
-- On PROC reduce production stmts -> expr 
-- On PRINT reduce production stmts -> expr 
-- On OPS reduce production stmts -> expr 
-- On INT reduce production stmts -> expr 
-- On IF reduce production stmts -> expr 
-- On IDENT reduce production stmts -> expr 
-- On EOF reduce production stmts -> expr 
-- On END reduce production stmts -> expr 
-- On ELSE reduce production stmts -> expr 
-- On CMD reduce production stmts -> expr 
-- On BOOL reduce production stmts -> expr 

State 20:
expr -> PROC ident IN stmts . END [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
stmts -> stmts . expr [ WHILE STR PROC PRINT OPS INT IF IDENT END CMD BOOL ]
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On INT shift to state 9
-- On IF shift to state 10
-- On IDENT shift to state 4
-- On END shift to state 21
-- On CMD shift to state 11
-- On BOOL shift to state 12
-- On ident shift to state 17
-- On expr shift to state 18

State 21:
expr -> PROC ident IN stmts END . [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
-- On WHILE reduce production expr -> PROC ident IN stmts END 
-- On STR reduce production expr -> PROC ident IN stmts END 
-- On PROC reduce production expr -> PROC ident IN stmts END 
-- On PRINT reduce production expr -> PROC ident IN stmts END 
-- On OPS reduce production expr -> PROC ident IN stmts END 
-- On INT reduce production expr -> PROC ident IN stmts END 
-- On IN reduce production expr -> PROC ident IN stmts END 
-- On IF reduce production expr -> PROC ident IN stmts END 
-- On IDENT reduce production expr -> PROC ident IN stmts END 
-- On EOF reduce production expr -> PROC ident IN stmts END 
-- On END reduce production expr -> PROC ident IN stmts END 
-- On ELSE reduce production expr -> PROC ident IN stmts END 
-- On CMD reduce production expr -> PROC ident IN stmts END 
-- On BOOL reduce production expr -> PROC ident IN stmts END 

State 22:
expr -> WHILE expr . IN stmts END [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
-- On IN shift to state 23

State 23:
expr -> WHILE expr IN . stmts END [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On INT shift to state 9
-- On IF shift to state 10
-- On IDENT shift to state 4
-- On CMD shift to state 11
-- On BOOL shift to state 12
-- On stmts shift to state 24
-- On ident shift to state 17
-- On expr shift to state 19

State 24:
expr -> WHILE expr IN stmts . END [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
stmts -> stmts . expr [ WHILE STR PROC PRINT OPS INT IF IDENT END CMD BOOL ]
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On INT shift to state 9
-- On IF shift to state 10
-- On IDENT shift to state 4
-- On END shift to state 25
-- On CMD shift to state 11
-- On BOOL shift to state 12
-- On ident shift to state 17
-- On expr shift to state 18

State 25:
expr -> WHILE expr IN stmts END . [ WHILE STR PROC PRINT OPS INT IN IF IDENT EOF END ELSE CMD BOOL ]
-- On WHILE reduce production expr -> WHILE expr IN stmts END 
-- On STR reduce production expr -> WHILE expr IN stmts END 
-- On PROC reduce production expr -> WHILE expr IN stmts END 
-- On PRINT reduce production expr -> WHILE expr IN stmts END 
-- On OPS reduce production expr -> WHILE expr IN stmts END 
-- On INT reduce production expr -> WHILE expr IN stmts END 
-- On IN reduce production expr -> WHILE expr IN stmts END 
-- On IF reduce production expr -> WHILE expr IN stmts END 
-- On IDENT reduce production expr -> WHILE expr IN stmts END 
-- On EOF reduce production expr -> WHILE expr IN stmts END 
-- On END reduce production expr -> WHILE expr IN stmts END 
-- On ELSE reduce production expr -> WHILE expr IN stmts END 
-- On CMD reduce production expr -> WHILE expr IN stmts END 
-- On BOOL reduce production expr -> WHILE expr IN stmts END 

State 26:
prog -> stmts . EOF [ # ]
stmts -> stmts . expr [ WHILE STR PROC PRINT OPS INT IF IDENT EOF CMD BOOL ]
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On INT shift to state 9
-- On IF shift to state 10
-- On IDENT shift to state 4
-- On EOF shift to state 27
-- On CMD shift to state 11
-- On BOOL shift to state 12
-- On ident shift to state 17
-- On expr shift to state 18

State 27:
prog -> stmts EOF . [ # ]
-- On # reduce production prog -> stmts EOF 

State 28:
prog' -> prog . [ # ]
-- On # accept prog

