State 0:
## Known stack suffix:
##
## LR(1) items:
prog' -> . prog [ # ]
## Transitions:
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On LET shift to state 9
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 4
-- On FETCH shift to state 14
-- On CMD shift to state 16
-- On BOOL shift to state 17
-- On stmts shift to state 33
-- On prog shift to state 35
-- On ident shift to state 23
-- On expr shift to state 25
## Reductions:

State 1:
## Known stack suffix:
## WHILE
## LR(1) items:
expr -> WHILE . stmts IN stmts END [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On LET shift to state 9
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 4
-- On FETCH shift to state 14
-- On CMD shift to state 16
-- On BOOL shift to state 17
-- On stmts shift to state 29
-- On ident shift to state 23
-- On expr shift to state 25
## Reductions:

State 2:
## Known stack suffix:
## STR
## LR(1) items:
expr -> STR . [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
## Reductions:
-- On WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL
--   reduce production expr -> STR

State 3:
## Known stack suffix:
## PROC
## LR(1) items:
expr -> PROC . ident IN stmts END [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
-- On IDENT shift to state 4
-- On ident shift to state 5
## Reductions:

State 4:
## Known stack suffix:
## IDENT
## LR(1) items:
ident -> IDENT . [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
## Reductions:
-- On WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL
--   reduce production ident -> IDENT

State 5:
## Known stack suffix:
## PROC ident
## LR(1) items:
expr -> PROC ident . IN stmts END [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
-- On IN shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## PROC ident IN
## LR(1) items:
expr -> PROC ident IN . stmts END [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On LET shift to state 9
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 4
-- On FETCH shift to state 14
-- On CMD shift to state 16
-- On BOOL shift to state 17
-- On stmts shift to state 27
-- On ident shift to state 23
-- On expr shift to state 25
## Reductions:

State 7:
## Known stack suffix:
## PRINT
## LR(1) items:
expr -> PRINT . [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
## Reductions:
-- On WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL
--   reduce production expr -> PRINT

State 8:
## Known stack suffix:
## OPS
## LR(1) items:
expr -> OPS . [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
## Reductions:
-- On WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL
--   reduce production expr -> OPS

State 9:
## Known stack suffix:
## LET
## LR(1) items:
expr -> LET . IDENT ATR expr [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
-- On IDENT shift to state 10
## Reductions:

State 10:
## Known stack suffix:
## LET IDENT
## LR(1) items:
expr -> LET IDENT . ATR expr [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
-- On ATR shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## LET IDENT ATR
## LR(1) items:
expr -> LET IDENT ATR . expr [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On LET shift to state 9
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 4
-- On FETCH shift to state 14
-- On CMD shift to state 16
-- On BOOL shift to state 17
-- On ident shift to state 23
-- On expr shift to state 26
## Reductions:

State 12:
## Known stack suffix:
## INT
## LR(1) items:
expr -> INT . [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
## Reductions:
-- On WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL
--   reduce production expr -> INT

State 13:
## Known stack suffix:
## IF
## LR(1) items:
expr -> IF . stmts ELSE stmts END [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
expr -> IF . stmts END [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On LET shift to state 9
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 4
-- On FETCH shift to state 14
-- On CMD shift to state 16
-- On BOOL shift to state 17
-- On stmts shift to state 18
-- On ident shift to state 23
-- On expr shift to state 25
## Reductions:

State 14:
## Known stack suffix:
## FETCH
## LR(1) items:
expr -> FETCH . IDENT [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
-- On IDENT shift to state 15
## Reductions:

State 15:
## Known stack suffix:
## FETCH IDENT
## LR(1) items:
expr -> FETCH IDENT . [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
## Reductions:
-- On WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL
--   reduce production expr -> FETCH IDENT

State 16:
## Known stack suffix:
## CMD
## LR(1) items:
expr -> CMD . [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
## Reductions:
-- On WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL
--   reduce production expr -> CMD

State 17:
## Known stack suffix:
## BOOL
## LR(1) items:
expr -> BOOL . [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
## Reductions:
-- On WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL
--   reduce production expr -> BOOL

State 18:
## Known stack suffix:
## IF stmts
## LR(1) items:
expr -> IF stmts . ELSE stmts END [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
expr -> IF stmts . END [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
stmts -> stmts . expr [ WHILE STR PROC PRINT OPS LET INT IF IDENT FETCH END ELSE CMD BOOL ]
## Transitions:
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On LET shift to state 9
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 4
-- On FETCH shift to state 14
-- On END shift to state 19
-- On ELSE shift to state 20
-- On CMD shift to state 16
-- On BOOL shift to state 17
-- On ident shift to state 23
-- On expr shift to state 24
## Reductions:

State 19:
## Known stack suffix:
## IF stmts END
## LR(1) items:
expr -> IF stmts END . [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
## Reductions:
-- On WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL
--   reduce production expr -> IF stmts END

State 20:
## Known stack suffix:
## IF stmts ELSE
## LR(1) items:
expr -> IF stmts ELSE . stmts END [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On LET shift to state 9
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 4
-- On FETCH shift to state 14
-- On CMD shift to state 16
-- On BOOL shift to state 17
-- On stmts shift to state 21
-- On ident shift to state 23
-- On expr shift to state 25
## Reductions:

State 21:
## Known stack suffix:
## IF stmts ELSE stmts
## LR(1) items:
expr -> IF stmts ELSE stmts . END [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
stmts -> stmts . expr [ WHILE STR PROC PRINT OPS LET INT IF IDENT FETCH END CMD BOOL ]
## Transitions:
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On LET shift to state 9
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 4
-- On FETCH shift to state 14
-- On END shift to state 22
-- On CMD shift to state 16
-- On BOOL shift to state 17
-- On ident shift to state 23
-- On expr shift to state 24
## Reductions:

State 22:
## Known stack suffix:
## IF stmts ELSE stmts END
## LR(1) items:
expr -> IF stmts ELSE stmts END . [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
## Reductions:
-- On WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL
--   reduce production expr -> IF stmts ELSE stmts END

State 23:
## Known stack suffix:
## ident
## LR(1) items:
expr -> ident . [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
## Reductions:
-- On WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL
--   reduce production expr -> ident

State 24:
## Known stack suffix:
## stmts expr
## LR(1) items:
stmts -> stmts expr . [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
## Reductions:
-- On WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL
--   reduce production stmts -> stmts expr

State 25:
## Known stack suffix:
## expr
## LR(1) items:
stmts -> expr . [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
## Reductions:
-- On WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL
--   reduce production stmts -> expr

State 26:
## Known stack suffix:
## LET IDENT ATR expr
## LR(1) items:
expr -> LET IDENT ATR expr . [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
## Reductions:
-- On WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL
--   reduce production expr -> LET IDENT ATR expr

State 27:
## Known stack suffix:
## PROC ident IN stmts
## LR(1) items:
expr -> PROC ident IN stmts . END [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
stmts -> stmts . expr [ WHILE STR PROC PRINT OPS LET INT IF IDENT FETCH END CMD BOOL ]
## Transitions:
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On LET shift to state 9
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 4
-- On FETCH shift to state 14
-- On END shift to state 28
-- On CMD shift to state 16
-- On BOOL shift to state 17
-- On ident shift to state 23
-- On expr shift to state 24
## Reductions:

State 28:
## Known stack suffix:
## PROC ident IN stmts END
## LR(1) items:
expr -> PROC ident IN stmts END . [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
## Reductions:
-- On WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL
--   reduce production expr -> PROC ident IN stmts END

State 29:
## Known stack suffix:
## WHILE stmts
## LR(1) items:
expr -> WHILE stmts . IN stmts END [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
stmts -> stmts . expr [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH CMD BOOL ]
## Transitions:
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On LET shift to state 9
-- On INT shift to state 12
-- On IN shift to state 30
-- On IF shift to state 13
-- On IDENT shift to state 4
-- On FETCH shift to state 14
-- On CMD shift to state 16
-- On BOOL shift to state 17
-- On ident shift to state 23
-- On expr shift to state 24
## Reductions:

State 30:
## Known stack suffix:
## WHILE stmts IN
## LR(1) items:
expr -> WHILE stmts IN . stmts END [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On LET shift to state 9
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 4
-- On FETCH shift to state 14
-- On CMD shift to state 16
-- On BOOL shift to state 17
-- On stmts shift to state 31
-- On ident shift to state 23
-- On expr shift to state 25
## Reductions:

State 31:
## Known stack suffix:
## WHILE stmts IN stmts
## LR(1) items:
expr -> WHILE stmts IN stmts . END [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
stmts -> stmts . expr [ WHILE STR PROC PRINT OPS LET INT IF IDENT FETCH END CMD BOOL ]
## Transitions:
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On LET shift to state 9
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 4
-- On FETCH shift to state 14
-- On END shift to state 32
-- On CMD shift to state 16
-- On BOOL shift to state 17
-- On ident shift to state 23
-- On expr shift to state 24
## Reductions:

State 32:
## Known stack suffix:
## WHILE stmts IN stmts END
## LR(1) items:
expr -> WHILE stmts IN stmts END . [ WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL ]
## Transitions:
## Reductions:
-- On WHILE STR PROC PRINT OPS LET INT IN IF IDENT FETCH EOF END ELSE CMD BOOL
--   reduce production expr -> WHILE stmts IN stmts END

State 33:
## Known stack suffix:
## stmts
## LR(1) items:
prog -> stmts . EOF [ # ]
stmts -> stmts . expr [ WHILE STR PROC PRINT OPS LET INT IF IDENT FETCH EOF CMD BOOL ]
## Transitions:
-- On WHILE shift to state 1
-- On STR shift to state 2
-- On PROC shift to state 3
-- On PRINT shift to state 7
-- On OPS shift to state 8
-- On LET shift to state 9
-- On INT shift to state 12
-- On IF shift to state 13
-- On IDENT shift to state 4
-- On FETCH shift to state 14
-- On EOF shift to state 34
-- On CMD shift to state 16
-- On BOOL shift to state 17
-- On ident shift to state 23
-- On expr shift to state 24
## Reductions:

State 34:
## Known stack suffix:
## stmts EOF
## LR(1) items:
prog -> stmts EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production prog -> stmts EOF

State 35:
## Known stack suffix:
## prog
## LR(1) items:
prog' -> prog . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept prog

