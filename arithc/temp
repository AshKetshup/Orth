%{
  open Ast
%}

%token <int> INT
%token <string> STR
%token <bool> BOOL
%token DUP, SWAP, DROP, PRINT, OVER, ROT
%token EOF

%start prog

%type <Ast.program> prog

%%

prog:
| p = expr EOF { List.rev p }

stmts:
| i = expr           { [i] }
| l = stmts i = expr { i :: l }
;

expr:
| i  = INT                                     { Int  i }
| s  = STR                                     { Str  s }
| b  = BOOL                                    { Bool b }
| c  = DUP | DROP                              { Cmd c  }
